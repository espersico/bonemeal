<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>num = instance_number(Small_Gate_obj);

for (var i = 0; i &lt; num; i++)
{
    gate[i] = instance_find(Small_Gate_obj, i);
    gate[i].opened = true;
}


instance_deactivate_object(Bat_obj);
instance_deactivate_object(Fishman_obj);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//check for when the player hits the switch if they haven't beaten the room
if (dunPuzzle_obj.combatrmVictory = false &amp;&amp; dunPuzzle_obj.bloodToggle[0] = true)
{
    //activate enemies
    instance_activate_all();
    
    //block the exits
    for (var i = 0; i &lt; num; i++)
    { gate[i].opened = false; }
}


//if the exit is blocked and there are no more enemies alive
if (gate[0].opened = false &amp;&amp; !instance_exists(Bat_obj) &amp;&amp; !instance_exists(Fishman_obj))
{
    //open the gates
    for (var i = 0; i &lt; num; i++)
    { gate[i].opened = true; }
    
    //set the room status too beaten
    dunPuzzle_obj.combatrmVictory = true;
}


/*
//block exits
if (instance_exists(Bat_obj) || instance_exists(Fishman_obj) &amp;&amp; !dunPuzzle_obj.combatrmVictory)
{
    for (var i = 0; i &lt; num; i++)
    { with (gate[i]) {opened = false; } }
}
else
{
    for (var i = 0; i &lt; num; i++)
    { with (gate[i]) {opened = true; } }
    
    dunPuzzle_obj.combatrmVictory = true;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
