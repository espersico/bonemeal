<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Menu_obj</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>Inherit_scr</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_all();

aniCount = 6;

/*
if (ds_exists(global.log, ds_type_stack)) {ds_stack_destroy(global.log);}
global.log = ds_stack_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>Inherit_scr</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Menu Selection Code

if (timeStamp3 = 0)
{/*
    if (Input[UP])
    {
        selection++;
        
        
        if (audio_is_playing(Reload_snd))
        {audio_stop_sound(Reload_snd);}
        
        var reload2 = audio_play_sound(Reload_snd, 50, false);
        audio_sound_pitch(reload2, 0.7);
        audio_sound_set_track_position(reload2, 0.015);
    }
    
    else if (Input[DOWN])
    {
        selection--;
        
        if (audio_is_playing(Reload_Gun_02_snd))
        {audio_stop_sound(Reload_Gun_02_snd);}
        
        var reload2 = audio_play_sound(Reload_Gun_02_snd, 50, false);
        audio_sound_pitch(reload2, 0.7);
        audio_sound_set_track_position(reload2, 0.015);
    }
    
    
    if (selection != 0) {selection = 0;}
    
    */
    if (Input[INTERACT])
    {
        audio_play_sound(Empty_Gun_snd, 100, false);
        timeStamp3 = current_time + 175;
    }
}
else if (current_time &gt;= timeStamp3)
{
    instance_create(x, y, Start_Menu_obj);
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//xoffsets
var leftPage = room_width/4;
var rightPage = room_width/2 + 80;

//text colors
var tc1 = c_navy;
var tc2 = tc1;
var tc3 = tc2;
var tc4 = tc3;
var tc5 = tc4;

//text spacing
var tp0 = room_height/2 - 128;
var tp1 = room_height/2 - 102;
var tp2 = tp1 + 25;
var tp3 = tp2 + 26;
var tp4 = tp3 + 30;
var tp5 = tp4 + 25;
var tp6 = tp5 + 29;
var tp7 = tp6 + 30;
var tp8 = tp7 + 30;
var tp9 = tp8 + 24;



draw_set_halign(fa_center);

//background
draw_sprite(Alpha_Fade_spr, 0, 0, 0);

//journal
draw_sprite(Journal_spr, 0, room_width/2, room_height/2 - 25);


draw_set_halign(fa_left);
draw_set_valign(fa_bottom);


//left page stuff
//title line
draw_text_transformed_colour(leftPage, tp0, "KEYBOARD &amp; MOUSE", 1, 1, 0, c_purple, c_purple, c_purple, c_purple, 1);

//line 1
draw_text_transformed_colour(leftPage, tp1, "Move: WASD/Arrow Keys", 0.75, 0.75, 0, tc1, tc1, tc1, tc1, 1);

//line 2
draw_text_transformed_colour(leftPage, tp2, "Melee: Space", 0.75, 0.75, 0, tc2, tc2, tc2, tc2, 1);

//line 3
draw_text_transformed_colour(leftPage, tp3, "Shoot: Space", 0.75, 0.75, 0, tc3, tc3, tc3, tc3, 1);

//line 4
draw_text_transformed_colour(leftPage, tp4, "Aim: Right Shift", 0.75, 0.75, 0, tc4, tc4, tc4, tc4, 1);

//line 5
draw_text_transformed_colour(leftPage, tp5, "Reload: Enter", 0.75, 0.75, 0, tc5, tc5, tc5, tc5, 1);

//line 6
draw_text_transformed_colour(leftPage, tp6, "Cycle: '/'", 0.75, 0.75, 0, tc1, tc1, tc1, tc1, 1);

//line 7
draw_text_transformed_colour(leftPage, tp7, "Dodge: Left Shift", 0.75, 0.75, 0, tc2, tc2, tc2, tc2, 1);

//line 8
draw_text_transformed_colour(leftPage, tp8, "Interact: E", 0.75, 0.75, 0, tc2, tc2, tc2, tc2, 1);

//line 9
draw_text_transformed_colour(leftPage + 15, tp9, "Pause: P, Escape", 0.75, 0.75, 0, tc2, tc2, tc2, tc2, 1);


//Right Page Stuff
//title line
draw_text_transformed_colour(rightPage, tp0, "Controller", 1, 1, 0, c_purple, c_purple, c_purple, c_purple, 1);

//line 1
draw_text_transformed_colour(rightPage, tp1, "Move: Left Stick/DPad", 0.75, 0.75, 0, tc1, tc1, tc1, tc1, 1);

//line 2
draw_text_transformed_colour(rightPage, tp2, "Melee: X Button", 0.75, 0.75, 0, tc2, tc2, tc2, tc2, 1);

//line 3
draw_text_transformed_colour(rightPage, tp3, "Shoot: Right Trigger", 0.75, 0.75, 0, tc3, tc3, tc3, tc3, 1);

//line 4
draw_text_transformed_colour(rightPage, tp4, "Aim: Left Trigger", 0.75, 0.75, 0, tc4, tc4, tc4, tc4, 1);

//line 5
draw_text_transformed_colour(rightPage, tp5, "Reload: Right Bumper", 0.75, 0.75, 0, tc5, tc5, tc5, tc5, 1);

//line 6
draw_text_transformed_colour(rightPage, tp6, "Cycle: Y Button", 0.75, 0.75, 0, tc1, tc1, tc1, tc1, 1);

//line 7
draw_text_transformed_colour(rightPage, tp7, "Dodge: B Button", 0.75, 0.75, 0, tc2, tc2, tc2, tc2, 1);

//line 8
draw_text_transformed_colour(rightPage, tp8, "Interact: A Button", 0.75, 0.75, 0, tc2, tc2, tc2, tc2, 1);

//line 9
draw_text_transformed_colour(rightPage, tp9, "Pause: Start", 0.75, 0.75, 0, tc2, tc2, tc2, tc2, 1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
