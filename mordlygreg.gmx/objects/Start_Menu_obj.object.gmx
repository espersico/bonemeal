<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>v = 0;

window_set_cursor(cr_none);

audio_stop_all();

global.paused = true;


/*
if (ds_exists(global.log, ds_type_stack)) {ds_stack_destroy(global.log);}
global.log = ds_stack_create();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>531</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_fullscreen</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///up and down input

    //up command
        if (gamepad_button_check_pressed(0, gp_padu) == true ||
            keyboard_check_pressed(ord('W')) == true || 
            keyboard_check_pressed(vk_up) == true)
        {
            Input[UP] = true;
        }
        else
        {
            Input[UP] = false;
        }
    
    
    //down command
        if (gamepad_button_check_pressed(0, gp_padd) == true||
            keyboard_check_pressed(ord('S')) == true ||
            keyboard_check_pressed(vk_down) == true)
        {
            Input[DOWN] = true;
        }
        else
        {
            Input[DOWN] = false;
        }
        
        
    //interact command
        if (gamepad_button_check_pressed(0, gp_face1) == true ||
            keyboard_check_pressed(ord('E')) == true ||
            keyboard_check_pressed(vk_space) == true ||
            keyboard_check_pressed(vk_enter) == true)
        {
            Input[INTERACT] = true;
        }
        else
        {
            Input[INTERACT] = false;
        }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (Input[UP])
{
    v++;
}

else if (Input[DOWN])
{
    v--;
}


if (v &gt; 1) {v = 0;} else if (v &lt; 0) {v = 1;}


if (Input[INTERACT])
{
    switch (v)
    {
      case 0:
        room_goto_next();
        if (room == Outside_rm) {instance_create(505, 1440, Player02_obj);}
        else {instance_create(0, 0, Player02_obj);}
        
        global.checkpoint = 1;
        global.paused = false;
        break;
        
      case 1:
        game_end();
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var tc1 = c_black;
var tc2 = c_black;

if (v == 0) {tc1 = c_white;} else {tc2 = c_white;}


draw_set_halign(fa_center);

//Game name, and company
draw_text_transformed_colour(room_width/2, room_height/2 - 160, "MORDLEY GREG, P.I.", 2, 2, 0, c_white, c_white, c_white, c_white, 1);
draw_text_colour(room_width/2, room_height/2 - 96, "by: bonemeal", c_white, c_white, c_white, c_white, 1);

//logo
draw_sprite(Mordley_Side_Aim_spr, 0, room_width/2, room_height/2 - 25);

//line 1
draw_text_transformed_colour(room_width/2, room_height/2 + 20, "START DEMO", 1.5, 1.5, 0, tc1, tc1, tc1, tc1, 1);

//line 2
draw_text_transformed_colour(room_width/2, room_height/2 + 60, "EXIT DEMO", 1.5, 1.5, 0, tc2, tc2, tc2, tc2, 1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
