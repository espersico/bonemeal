<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>Menu_obj</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>Inherit_scr</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_all();

aniCount = 6;

/*
if (ds_exists(global.log, ds_type_stack)) {ds_stack_destroy(global.log);}
global.log = ds_stack_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>Inherit_scr</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Menu Selection Code
if (timeStamp3 = 0)
{
    switch (selection)
    {
      //GUI Scale
      case 0.1:
        //is actually up...
        if (Input[DOWN] &amp;&amp; global.scaleFactor &lt; 5) {global.scaleFactor += 0.05;}
        //is actually down...
        else if (Input[UP] &amp;&amp; global.scaleFactor &gt; 0.05) {global.scaleFactor -= 0.05;}
        break;
        
      //volume
      case 1.1:
        var gains = audio_get_master_gain(0);
      
        if (Input[DOWN] &amp;&amp; gains &lt; 1) {gains += 0.05;}
        else if (Input[UP] &amp;&amp; gains &gt; 0) {gains -= 0.05;}
        
        audio_set_master_gain(0, gains);
        break;
    
      default:
        if (Input[UP])
        {
            selection++
            
            
            if (audio_is_playing(Reload_Gun_02_snd))
            {audio_stop_sound(Reload_Gun_02_snd);}
            
            var reload2 = audio_play_sound(Reload_Gun_02_snd, 50, false);
            audio_sound_pitch(reload2, 0.7);
            audio_sound_set_track_position(reload2, 0.015);
        }
        
        else if (Input[DOWN])
        {
            selection--;
            
            if (audio_is_playing(Reload_Gun_02_snd))
            {audio_stop_sound(Reload_Gun_02_snd);}
            
            var reload2 = audio_play_sound(Reload_Gun_02_snd, 50, false);
            audio_sound_pitch(reload2, 0.7);
            audio_sound_set_track_position(reload2, 0.015);
        }
        
        
        if (selection &gt; 6) {selection = 0;} else if (selection &lt; 0) {selection = 6;}
    }
    
    if (Input[INTERACT])
    {
        audio_play_sound(Empty_Gun_snd, 100, false);
        timeStamp3 = current_time + 175;
    }
}
else if (current_time &gt;= timeStamp3)
{
    switch (selection)
    {
      //GUI Scale
      case 0:
        selection = 0.1;
        break;
        
        case 0.1:
          selection = 0;
          break;
        
      //Volume
      case 1:
        selection = 1.1
        break;
        
        case 1.1:
          selection = 1;
          break;
        
      //Back
      case 2:
        break;
        
      //No Damage
      case 3:
        selection = 3.1;
        break;
        
        case 3.1:
          selection = 3;
          break;
          
        case 3.2:
          selection = 3;
          break;
        
      //Keys
      case 4:
        selection = 4.1;
        break;
        
        case 4.1:
          selection = 4;
          break;
          
        case 4.2:
          selection = 4;
          break;
        
      //Reset Room
      case 5:
        break;
        
      //Main Menu
      case 6:
        room_goto(Start_Menu);
        break;
    }
    
    timeStamp3 = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//xoffsets
var leftPage = room_width/4;
var rightPage = room_width/2 + 80;

//text colors
var tc1 = c_navy;
var tc2 = tc1;
var tc3 = tc2;
var tc4 = tc3;
var tc5 = tc4;
var tc6 = tc5;
var tc7 = tc6;

//text scales
var ts1 = 1;
var ts2 = ts1;
var ts3 = ts2;
var ts4 = ts3;
var ts5 = ts4;

//text spacing
var tp0 = room_height/2 - 128;
var tp1 = room_height/2 - 102;
var tp2 = tp1 + 25;
var tp3 = tp2 + 26;
var tp4 = tp3 + 30;
var tp5 = tp4 + 25;
var tp6 = tp5 + 29;
var tp7 = tp6 + 30;
var tp8 = tp7 + 30;
var tp9 = tp8 + 24;

var tph1 = leftPage;
var tph2 = leftPage;
var tph3 = leftPage;
var tph4 = rightPage;
var tph5 = rightPage;
var tph6 = rightPage;
var tph7 = rightPage;


var mx = room_width/2 + 55;
var my = 0;


//change text based on selction
switch (selection)
{
  //GUI Scale
  case 0:
    tc1 = c_purple;
    ts1 += 0.5
    tph1 += 10;
    
    mx = leftPage - 27;
    my = tp2;
    break;
    
    case 0.1:
      mx = leftPage - 20;
      my = tp3;
      break;
    
  //Volume
  case 1:
    tc2 = c_purple;
    ts2 += 0.5
    tph2 += 10;
    
    mx = leftPage - 27;
    my = tp5;
    break;
    
    case 1.1:
      mx = leftPage - 20;
      my = tp6;
      break;
    
  //BACK Button
  case 2:
    tc3 = c_purple;
    ts3 += 0.5
    tph3 += 10;
    
    mx = leftPage - 12;
    my = tp9;
    break;
    
  //NO DAMAGE
  case 3:
    tc4 = c_purple;
    ts4 += 0.5
    tph4 += 10;
    my = tp1;
    break;
    
    //ON
    case 3.1:
      my = tp2;
      break;
      
    //OFF
    case 3.2:
      my = tp2;
      break;
    
  //Keys
  case 4:
    tc5 = c_purple;
    ts5 += 0.5
    tph5 += 10;
    my = tp4;
    break;
    
    //KEY++
    case 4.1:
      my = tp5;
      break;
      
    //BIGKEY++
    case 4.2:
      my = tp5;
      break;
    
  //Room Reset
  case 5:
    tc6 = c_purple;
    tph6 += 10;
    my = tp7;
    break;
    
  //Exit Demo
  case 6:
    tc7 = c_purple;
    tph7 += 10;
    my = tp9;
    break;
}


draw_set_halign(fa_center);

//background
draw_sprite(global.pauseBkg, 0, 0, 0);
draw_sprite(Alpha_Fade_spr, 0, 0, 0);

//journal
draw_sprite(Journal_spr, 0, room_width/2, room_height/2 - 25);


draw_set_halign(fa_left);
draw_set_valign(fa_bottom);


//pointer
draw_sprite(Mordley_Side_Aim_spr, 0, mx, my - 3);


//left page stuff
//title line
draw_text_transformed_colour(leftPage + 30, tp0, "Options:", 1, 1, 0, c_purple, c_purple, c_purple, c_purple, 1);

//line 1
//draw_text_transformed_colour(leftPage, tp1, "Move: WASD/Arrow Keys", 1, 1, 0, tc1, tc1, tc1, tc1, 1);

//line 2
draw_text_transformed_colour(tph1, tp2, "GUI Scale:", 1, 1, 0, tc1, tc1, tc1, tc1, 1);

//line 3
if (selection != 0.1) {draw_line_width_colour(leftPage + 15, tp3-9, leftPage, tp3-9, 2, tc1, tc1);}
draw_line_width_colour(leftPage + 60, tp3-9, leftPage*1.65, tp3-9, 2, tc1, tc1);
draw_text_transformed_colour(leftPage + 20, tp3, string_format(global.scaleFactor, 1, 2), 1, 1, 0, tc1, tc1, tc1, tc1, 1);

//line 4
//draw_text_transformed_colour(leftPage, tp4, "Aim: Space", 1, 1, 0, tc4, tc4, tc4, tc4, 1);

//line 5
draw_text_transformed_colour(tph2, tp5, "Volume:", 1, 1, 0, tc2, tc2, tc2, tc2, 1);

//line 6
var num = 45;
if (audio_get_master_gain(0) == 1) {num = 55;}
else if (audio_get_master_gain(0) &lt; 0.1) {num = 35;}

if (selection != 1.1) {draw_line_width_colour(leftPage + 15, tp6-9, leftPage, tp6-9, 2, tc2, tc2);}
draw_line_width_colour(leftPage + num, tp6-9, leftPage*1.65, tp6-9, 2, tc2, tc2);
draw_text_transformed_colour(leftPage + 20, tp6, round(audio_get_master_gain(0)*100), 1, 1, 0, tc2, tc2, tc2, tc2, 1);

//line 7
//draw_text_transformed_colour(leftPage, tp7, "Dodge: Left Shift", 1, 1, 0, tc2, tc2, tc2, tc2, 1);

//line 8
//draw_text_transformed_colour(leftPage, tp8, "Interact: E", 1, 1, 0, tc2, tc2, tc2, tc2, 1);

//line 9
draw_text_transformed_colour(tph3 + 15, tp9, "BACK", 1, 1, 0, tc3, tc3, tc3, tc3, 1);



//Right Page Stuff
//title line
draw_text_transformed_colour(rightPage - 9, tp0, "Debug: [In Game Only]", 1, 1, 0, c_purple, c_purple, c_purple, c_purple, 1);

//line 1
draw_text_transformed_colour(tph4, tp1, "No Damage:", 1, 1, 0, tc4, tc4, tc4, tc4, 1);

//line 2
draw_text_transformed_colour(tph4, tp2, "ON     OFF", 1, 1, 0, tc4, tc4, tc4, tc4, 1);

//line 3
//draw_text_transformed_colour(tph3, tp3, "Add Keys: 0 :: 0", 1, 1, 0, tc3, tc3, tc3, tc3, 1);

//line 4
draw_text_transformed_colour(tph5, tp4, "Add Keys:", 1, 1, 0, tc5, tc5, tc5, tc5, 1);

//line 5
draw_text_transformed_colour(tph5, tp5, "K: 0   BK: 0", 1, 1, 0, tc5, tc5, tc5, tc5, 1);

//line 6

//line 7
draw_text_transformed_colour(tph6, tp7, "RESET ROOM", 1, 1, 0, tc6, tc6, tc6, tc6, 1);

//line 8

//line 9
draw_text_transformed_colour(tph7, tp9, "MAIN MENU", 1, 1, 0, tc7, tc7, tc7, tc7, 1);


/*
if (Input[INTERACT]) {aniCount = 0;}
if (aniCount &lt; 6)
{
    draw_sprite(Bullet_Ani_spr, aniCount, room_width/2 + 95, my - 11);
    aniCount += 0.5;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
